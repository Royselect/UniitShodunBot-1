import telebot
import atoma 
import requests
import socket
from telebot import types
from shodan import Shodan
from pathlib import Path

#тег бота: @UniitShodunBot
bot = telebot.TeleBot('5877928916:AAHWzT4YLy9UNaOCQOtp1dTRH-7GK3wIneM') #token
chat_id = '-858519698'

"""
Бот в Telegram для парсинга инфы с shodan и поиска эксплойтов на exploit-db
> План:
1. авторизация на shodan
2. парсинг shodan
3. отправка инфы юзеру
4. вход на exploit-db
5. поиск эксплойтов
6. отправка инфы юзеру
"""

"""
1. shodan
2. abuseIPDB
3. exploit-db
4. git
"""

api = Shodan('5IzE5XrF0qjDPPGevvuCRJ0AcpFCekri')


# работа со списком
file = open("ips.txt")
ips = list([w for w in Path('ips.txt').read_text(encoding="utf-8").replace("\n", " ").split()])
#print(ips)

l = ''
i = 0
for ip in ips:
    l += str(i) + '. ' + ip +', ' + socket.gethostbyname(ip) + '\n'
    i = i + 1

@bot.message_handler(commands=['list'])
def start(message):
    bot.send_message(chat_id, l)
    #приём числа




@bot.message_handler(content_types=['text'])
def handle_text(message):
        if message.text.isdigit():
            m = 0
            m = int(message.text)
            if ((m >= 0 )& (m <= len(ips))):
                print(m)
                print(ips[m])
                ip = socket.gethostbyname(ips[m]) # адрес из листа
                print(ip)
                request = api.host(ip)
                print(request)
                mes = ''
                for obj in request['ports'] + request['domains']:
                    mes += str(obj) + ', '
                mes = mes[0:-2]
                bot.send_message(chat_id, mes )
            else:
                bot.send_message(chat_id, "Значение нет")
        else:
            bot.send_message(chat_id, "Значение не то")


# @bot.message_handler(commands='find') # реакция на 
# def start(message):
#     ip = socket.gethostbyname(ips[1]) # адрес из листа
#     request = api.host(ip)
#     mes = ''
#     for obj in request['ports'] + request['domains']:
#         mes += str(obj) + ', '
#     mes = mes[0:-2]
#     bot.send_message(chat_id, mes )

#Abuseipdbd
import requests
import json

url = 'https://api.abuseipdb.com/api/v2/check'

querystring = {
    'ipAddress': '5.255.255.60',
    'maxAgeInDays': '365'
}

headers = {
    'Accept': 'application/json',
    'Key': 'bf5f99dad0962181e1fad775d25ab1ad08cbbc0bb12642052bece9ceba742b1cc19c1b417231b445'
}

response = requests.request(method='GET', url=url, headers=headers, params=querystring)

decodedResponse = json.loads(response.text)
print(json.dumps(decodedResponse, sort_keys=True, indent=4))



# exploit-db
feed_name = "Exploit-DB.com RSS Feed"
url = "https://www.exploit-db.com/rss.xml"
response = requests.get(url)
feed = atoma.parse_rss_bytes(response.content)

# date1 = feed.pub_date.strftime('%d-%m-%Y')
# print ("Feed: " + feed.title)
# print ("Description: " + feed.description)
# print ("Link: " + feed.link)
# print ("Feed Update: " + date1)

# for post in feed.items:
#     date2 = post.pub_date.strftime('%d-%m-%Y')
#     print ("Published Date: " + date2)
#     print ("Title: " + post.description)
#     print ("Description: " + post.title)
#     print ("Link: " + post.link)

@bot.message_handler(commands=['exploit'])
def start(message):
    date3 = feed.items[0].pub_date.strftime('%d-%m-%Y')
    bot.send_message(chat_id, "Published Date: " + date3
                                            + "\nTitle: " + feed.items[0].title
                                            + "\nDescription: " + feed.items[0].description
                                            + "\nLink: " + feed.items[0].link)


if __name__ == '__main__':
    bot.infinity_polling()
